stages: # a single stage/job per openfoam version so we don't repeat stuff
  - build-and-test

v2012:
  image: ghcr.io/foamscience/jammy-openfoam:v2012
  stage: build-and-test
  only:
    refs:
      - master
  tags:
    - local
    - v2012
  script: 
    - echo "Compiling the libs..."
    - source /usr/lib/openfoam/openfoam2012/etc/bashrc && mkdir -p /home/openfoam/OpenFOAM/openfoam-v2012/platforms/linux64GccDPInt32Opt/lib && ./Allwmake
    - echo "Running unit tests... "
    - cd tests
    - git clone https://github.com/FoamScience/foamUT
    - rm -rf foamUT/tests/exampleTests
    - echo $CI_PROJECT_DIR
    - ln -s $CI_PROJECT_DIR/tests/adaptiveFvMeshTests $CI_PROJECT_DIR/tests/foamUT/tests/adaptiveFvMeshTests
    - rm -r foamUT/cases
    - cp -r testCases foamUT/cases
    - cd foamUT
    - sed -i 's_/dev/shm_/home/openfoam/data_g' Alltest
    - export AMR_PROJECT=$CI_PROJECT_DIR && export CATCH_TIMEOUT=180 && source /usr/lib/openfoam/openfoam2012/etc/bashrc && ./Alltest; cat /builds/elwardi.fadeli/blastamr/tests/foamUT/tests/adaptiveFvMeshTests/log.wmake
    - echo "Done."

v2006:
  image: ghcr.io/foamscience/jammy-openfoam:v2006
  stage: build-and-test
  only:
    refs:
      - master
  tags:
    - local
    - v2006
  script: 
    - echo "Compiling the libs..."
    - source /usr/lib/openfoam/openfoam2006/etc/bashrc && mkdir -p /home/openfoam/OpenFOAM/openfoam-v2006/platforms/linux64GccDPInt32Opt/lib && ./Allwmake
    - echo "Running unit tests... "
    - cd tests
    - git clone https://github.com/FoamScience/foamUT
    - rm -rf foamUT/tests/exampleTests
    - echo $CI_PROJECT_DIR
    - ln -s $CI_PROJECT_DIR/tests/adaptiveFvMeshTests $CI_PROJECT_DIR/tests/foamUT/tests/adaptiveFvMeshTests
    - rm -r foamUT/cases
    - cp -r testCases foamUT/cases
    - cd foamUT
    - sed -i 's_/dev/shm_/home/openfoam/data_g' Alltest
    - export AMR_PROJECT=$CI_PROJECT_DIR && export CATCH_TIMEOUT=180 && source /usr/lib/openfoam/openfoam2006/etc/bashrc && ./Alltest; cat /builds/elwardi.fadeli/blastamr/tests/foamUT/tests/adaptiveFvMeshTests/log.wmake
    - echo "Done."

v2212:
  image: ghcr.io/foamscience/jammy-openfoam:v2212
  stage: build-and-test
  only:
    refs:
      - v2212
  tags:
    - local
    - v2212
  script: 
    - echo "Compiling the libs..."
    - source /usr/lib/openfoam/openfoam2212/etc/bashrc && mkdir -p /home/openfoam/OpenFOAM/openfoam-v2212/platforms/linux64GccDPInt32Opt/lib && ./Allwmake
    - echo "Running unit tests... "
    - cd tests
    - git clone https://github.com/FoamScience/foamUT
    - rm -rf foamUT/tests/exampleTests
    - echo $CI_PROJECT_DIR
    - ln -s $CI_PROJECT_DIR/tests/adaptiveFvMeshTests $CI_PROJECT_DIR/tests/foamUT/tests/adaptiveFvMeshTests
    - rm -r foamUT/cases
    - cp -r testCases foamUT/cases
    - cd foamUT
    - sed -i 's_/dev/shm_/home/openfoam/data_g' Alltest
    - export AMR_PROJECT=$CI_PROJECT_DIR && export CATCH_TIMEOUT=180 && source /usr/lib/openfoam/openfoam2212/etc/bashrc && ./Alltest; cat /builds/elwardi.fadeli/blastamr/tests/foamUT/tests/adaptiveFvMeshTests/log.wmake
    - echo "Done."

diagram:
  image: ghcr.io/foamscience/jammy-openfoam:v2006
  stage: build-and-test
  needs:
    - v2006
  only:
    refs:
      - master
  when: manual
  tags:
    - local
    - v2006
  script: 
    - sudo apt update
    - sudo apt install -y gpg-agent
    - sudo add-apt-repository --yes ppa:bkryza/clang-uml
    - DEBIAN_FRONTEND=noninteractive sudo apt install --no-install-recommends  -y bear clang-uml plantuml texlive-latex-extra graphviz
    - echo "Compiling the libs..."
    - source /usr/lib/openfoam/openfoam2006/etc/bashrc && mkdir -p /home/openfoam/OpenFOAM/openfoam-v2006/platforms/linux64GccDPInt32Opt/lib && bear -- ./Allwmake
    - echo "Generating the diagram..."
    - clang-uml; cd puml; plantuml -Slinetype=ortho -tpdf adaptiveFvMesh.puml
    - echo "Done."
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: on_success
    expire_in: "30 days"
    paths:
      - puml/adaptiveFvMesh.pdf
